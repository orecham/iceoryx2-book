name: Pages

on:
  push:
    branches: [ main ]
    paths:
      - 'source/**'
      - 'poetry.lock'
      - 'pyproject.toml'
      - '.markdownlint.json'
      - '.github/workflows/build-deploy.yml'
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main ]
    paths:
      - 'source/**'
      - 'poetry.lock'
      - 'pyproject.toml'
      - '.markdownlint.json'
      - '.github/workflows/docs.yml'
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: markdownlint-cli
        uses: nosborn/github-action-markdown-cli@v3.5.0
        with:
          files: source
          config: .markdownlint.json
          dot: true

  build:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.4
          virtualenvs-create: true
          virtualenvs-in-project: true
          
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y doxygen graphviz

      - name: Cache Poetry virtualenv
        uses: actions/cache@v4
        with:
          path: |
            .venv
            ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
          
      - name: Install Python dependencies if not cached
        run: poetry install --no-root --with dev

      - name: Build documentation
        run: poetry run make clean html
          
      - name: Upload documentation artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: build/html
          if-no-files-found: error
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
