name: Build and Deploy Book

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
    paths:
      - 'source/**'
      - 'poetry.lock'
      - 'pyproject.toml'
      - '.markdownlint.json'
      - '.github/workflows/build-deploy.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'source/**'
      - 'poetry.lock'
      - 'pyproject.toml'
      - '.markdownlint.json'
      - '.github/workflows/build-deploy.yml'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: markdownlint-cli
        uses: nosborn/github-action-markdown-cli@v3.5.0
        with:
          files: source
          config: .markdownlint.json
          dot: true

  build:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # Fetch all history for sphinx-multiversion
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.4
          virtualenvs-create: true
          virtualenvs-in-project: true
          
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y doxygen graphviz

      - name: Cache Poetry virtualenv
        uses: actions/cache@v4
        with:
          path: |
            .venv
            ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Python dependencies
        run: poetry install --no-root --with dev

      - name: Build book versions
        run: make publication
          
      - name: Upload book artifact
        uses: actions/upload-artifact@v4
        with:
          name: book-${{ github.sha }}
          path: build/publish
          retention-days: 30

  deploy:
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download book artifact
        uses: actions/download-artifact@v4
        with:
          name: book-${{ github.sha }}
          path: ./book
      - name: Create root redirect
        run: |
          cat > ./book/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <meta charset="utf-8">
              <title>Redirecting to iceoryx2 Documentation</title>
              <meta http-equiv="refresh" content="0; url=./main/">
              <link rel="canonical" href="./main/">
          </head>
          <body>
              <p>Redirecting to <a href="./main/">iceoryx2 documentation</a>...</p>
          </body>
          </html>
          EOF
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./book
          keep_files: true
          enable_jekyll: false
